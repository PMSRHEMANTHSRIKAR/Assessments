# -*- coding: utf-8 -*-
"""Final_assessment-2A.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v1Ml45tDoshKc-s1GtYWwhHLWaMRfPBV
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler,LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score,precision_score,recall_score,classification_report

df=pd.read_csv('/content/penguins_classification.csv')
df

df.isna().sum()

df['bill_depth_mm']=df['bill_depth_mm'].fillna(df['bill_depth_mm'].mode()[0])

df.isna().sum()

df.duplicated().sum()

df.info()

le=LabelEncoder()
for i in df.select_dtypes(include='object').columns:
  df[i]=le.fit_transform(df[i])

df

X=df.drop('species',axis=1)
y=df['species']

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)

scaled=StandardScaler()
X_train_scaled=scaled.fit_transform(X_train)
X_test_scaled=scaled.transform(X_test)

model=DecisionTreeClassifier()
model.fit(X_train_scaled,y_train)
y_pred=model.predict(X_test_scaled)

acc=accuracy_score(y_test,y_pred)
print(f'Accuracy score is{acc}')

clas=classification_report(y_test,y_pred)
print(f'Classification report {clas}')

prec=precision_score(y_test,y_pred)
print(f'Precision Score is{prec}')

recall=recall_score(y_test,y_pred)
print(f'Recall Score is {recall}')

