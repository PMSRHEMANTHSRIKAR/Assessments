# -*- coding: utf-8 -*-
"""Second_assessment_1A.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nXRzIyC0_vzqWbF8X-o7HDhAtyE8qEGd
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler,StandardScaler,LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

df=pd.read_csv('/content/winequality-red.csv')
df

df.isna().sum()

df['fixed acidity']=df['fixed acidity'].fillna(df['fixed acidity'].mean())

df['volatile acidity']=df['volatile acidity'].fillna(df['volatile acidity'].mean())

df['citric acid']=df['citric acid'].fillna(df['citric acid'].mean())

df['residual sugar']=df['residual sugar'].fillna(df['residual sugar'].mean())

df['chlorides']=df['chlorides'].fillna(df['chlorides'].mean())

df['free sulfur dioxide']=df['free sulfur dioxide'].fillna(df['free sulfur dioxide'].mean())

df['sulphates']=df['sulphates'].fillna(df['sulphates'].mean())

df.isna().sum()

df.duplicated().sum()

df=df.drop_duplicates()

df.duplicated().sum()

df.shape

df.info()

df.describe()

for i in df['quality'].all():
  if df['quality'] >=3 or df['quality'] <= 6:
    df['quality']=0
  else:
    df['qualtiy'] = 1

X=df.drop('quality',axis=1)
y=df['quality']
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)

scaled=StandardScaler()
X_train_scaled=scaled.fit_transform(X_train)
X_test_scaled=scaled.transform(X_test)

#model = KNeighborsClassifier()

#model.fit(X_train_scaled,y_train)
#y_pred=model.predict(X_test_scaled)

model = RandomForestClassifier(n_estimators=500, random_state=40)

model.fit(X_train_scaled,y_train)
y_pred=model.predict(X_test_scaled)

acc=accuracy_score(y_test,y_pred)
acc

